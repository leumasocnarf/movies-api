openapi: "3.0.3"
info:
  title: "Application API"
  description: "Application API"
  version: "1.0.0"
servers:
  - url: "http://0.0.0.0:8080"
paths:
  /movies:
    get:
      description: "Get list of movies"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Movie"
    post:
      description: "Create a movie"
      requestBody:
        description: "A JSON object containing the new movie information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
      responses:
        "201":
          description: "Created"
          content:
            text/plain:
              type: "string"
            examples:
              Example#1:
                value: "New movie successfully created."
  /movies/{id}:
    get:
      description: "Get a movie by its Id"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Movie"
        "404":
          description: "Object not found by given Id"
    patch:
      description: "Patch a movie by its Id and new data"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        description: "A JSON object containing the updated movie information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Movie"
        "404":
          description: "Object not found by given Id"
    delete:
      description: "Delete a movie by its Id"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "No Content"
        "404":
          description: "Object not found by given Id"

components:
  schemas:
    Movie:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        title:
          type: "string"
        description:
          type: "string"
        duration:
          type: "integer"
          format: "int32"
        year:
          type: "integer"
          format: "int32"
